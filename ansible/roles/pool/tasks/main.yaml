---

- name: Create Deploy Directory
  file:
    path: /home/{{ admin_user }}/pool
    state: directory
    mode: 0755

- name: Copy Pool k8s Services
  copy:
    src: "{{ item }}"
    dest: /home/{{ admin_user }}/pool/
    owner: "{{ admin_user }}"
    mode: 0755
  with_items:
    - "{{ pool_k8s_volumes }}"
    - "{{ pool_k8s_services }}"
    - "{{ pool_k8s_secrets_scripts }}"

- name: Ensure stratum data directory exists
  file:
    path: /data/stratum
    state: directory
    mode: 0755

- name: Copy stratum service config
  copy:
    src: "{{ playbook_dir }}/../stratum/grin-pool.toml.j2"
    dest: /data/stratum/grin-pool.toml
    owner: "{{ admin_user }}"
    group: "{{ admin_user }}"
    mode: 0644

- name: Ensure services data directory exists
  file: 
    path: /data/services
    state: directory
    mode: 0755

- name: Copy services config
  copy:
    src: "{{ playbook_dir }}/../grin-py/services/config.ini.j2"
    dest: /data/services/config.ini
    owner: "{{ admin_user }}"
    group: "{{ admin_user }}"
    mode: 0644

- name: Ensure mysql directory exists
  file: 
    path: /data/mysql
    state: directory
    mode: 0755

- name: Check for pre-canned database tgz
  local_action: stat path={{ role_path }}/files/mysql_pool_db.tgz
  become: no
  register: stat_pooldb

- name: Copy pre-canned database (if one exists)
  copy:
    src: "{{ role_path }}/files/mysql_pool_db.tgz"
    dest: /data/mysql
  when: stat_pooldb.stat.exists

- name: Extract the pre-canned database (if one exists)
  shell: tar xzf mysql_pool_db.tgz
  args:
    chdir: /data/mysql

- name: Deploy Pool Services
  shell: kubectl create -f {{ item }} 
  args:
    chdir: /home/{{ admin_user }}/pool/
  with_items:
    - "{{ pool_k8s_volumes }}"
    - "{{ pool_k8s_services }}"

- name: Add secrets via script
  shell: ./{{ item }}
  args:
    chdir: /home/{{ admin_user }}/pool/
  with_items:
    - "{{ pool_k8s_secrets_scripts }}"

#- name: Find stratum container
#  shell: docker ps | grep stratum- | grep -v pause | awk '{print $1}'
#  register: stratum_container
#
#- name: extract stratum config
#  shell: docker cp {{ stratum_container }}:/usr/local/bin/grin-pool.toml /data/stratum/grin-pool.toml
#
#- name: update grin-pool config
#  path: /data/stratum/grin-pool.toml
#  regexp: 'address = "grin"'
#  line: 'address = "grin"'
#
#
#- name: Ensure services data directory exists
#  file: /data/services
#  state: directory
#  mode: 0755
#
#- name: Find services container
#  shell: docker ps | grep blockwatcher- | grep -v pause | awk '{print $1}'
#  register: services_container
#
#- name: extract services config
#  shell: docker cp {{ services_container }}:/usr/local/bin/config.ini /data/services/config.ini
#
#- name: update services config
#  path: /data/services/config.ini
#  regexp: 'address = grin'
#  line: 'address = {{ ansible_default_ipv4.address }}'
